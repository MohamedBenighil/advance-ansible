---
# EXERCICE1
# Let us improvise our playbook a little bit more.
# We have created a folder called host_vars and created a file under it called 'db_and_web_server.yml'
# Move the connection information such as the IP and password to the new file and remove it from the inventory file
##
#
## ------------------------------
##           BEFORE
## ------------------------------
#-
#  name: Deploy a web application
#  hosts: db_and_web_server
#  vars:
#    db_name: employee_db
#    db_user: db_user
#    db_password: Passw0rd
#  tasks:
#    - name: Install dependencies
#      apt: name={{ item }} state=installed
#      with_items:
#       - python
#       - python-setuptools
#       - python-dev
#       - build-essential
#       - python-pip
#       - python-mysqldb
#
#    - name: Install MySQL database
#      apt:
#        name: "{{ item }}"
#        state:  installed
#      with_items:
#       - mysql-server
#       - mysql-client
#
#    - name: Start Mysql Service
#      service:
#        name: mysql
#        state: started
#        enabled: yes
#
#    - name: Create Application Database
#      mysql_db: name={{ db_name }} state=present
#
#
#    - name: Create Application DB User
#      mysql_user: name={{ db_user }} password={{ db_password }} priv='*.*:ALL' host='%' state='present'
#
#    - name: Install Python Flask dependencies
#      pip:
#        name: '{{ item }}'
#        state: present
#      with_items:
#       - flask
#       - flask-mysql
#
#    - name: Copy web-server code
#      copy: src=app.py dest=/opt/app.py
#
#    - name: Start web-application
#      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &

- name: Deploy a web application
  hosts: db_and_web_server
  vars:
    db_name: employee_db
    db_user: db_user
    db_password: Passw0rd
  tasks:
    - name: Install dependencies
      apt: name={{ item }} state=installed
      with_items:
        - python
        - python-setuptools
        - python-dev
        - build-essential
        - python-pip
        - python-mysqldb

    - name: Install MySQL database
      apt:
        name: "{{ item }}"
        state: installed
      with_items:
        - mysql-server
        - mysql-client

    - name: Start Mysql Service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create Application Database
      mysql_db: name={{ db_name }} state=present

    - name: Create Application DB User
      mysql_user: name={{ db_user }} password={{ db_password }} priv='*.*:ALL' host='%' state='present'

    - name: Install Python Flask dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql

    - name: Copy web-server code
      copy: src=app.py dest=/opt/app.py

    - name: Start web-application
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &
# Exercise2
# Now let us move the database parameters as well to the host_vars file.
#
- name: Deploy a web application
  hosts: db_and_web_server
  tasks:
    - name: Install dependencies
      apt: name={{ item }} state=installed
      with_items:
        - python
        - python-setuptools
        - python-dev
        - build-essential
        - python-pip
        - python-mysqldb

    - name: Install MySQL database
      apt:
        name: "{{ item }}"
        state: installed
      with_items:
        - mysql-server
        - mysql-client

    - name: Start Mysql Service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create Application Database
      mysql_db: name={{ db_name }} state=present

    - name: Create Application DB User
      mysql_user: name={{ db_user }} password={{ db_password }} priv='*.*:ALL' host='%' state='present'

    - name: Install Python Flask dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql

    - name: Copy web-server code
      copy: src=app.py dest=/opt/app.py

    - name: Start web-application
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &

#Exercise3
# We will now separate the tasks into different files. I have now created a folder called "tasks"
# and created two files under it called "deploy_db.yml" and "deploy_web.yml".
# We will now move the tasks from the main playbook into respective tasks
#  files - deploy_db.yml and deploy_web.yml
# First, move (simply cut and paste) the below tasks into deploy_db.yml file
# - Install MySQL database
# - Start Mysql Service
# - Create Application Database
# - Create Application DB User
#
# Note, we will leave Install Dependencies there, since it is not specific to database or web.
# We will add the include statement in the next Exercise
#
## ------------------------------
##           BEFORE
## ------------------------------
- name: Deploy a web application
  hosts: db_and_web_server
  tasks:
    - name: Install dependencies
      apt: name={{ item }} state=installed
      with_items:
        - python
        - python-setuptools
        - python-dev
        - build-essential
        - python-pip
        - python-mysqldb

    - name: Install Python Flask dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql
    - name: Install Python Flask dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql

    - name: Copy web-server code
      copy: src=app.py dest=/opt/app.py

    - name: Start web-application
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &
#Execrcise4
# Let us now add an include statement in the playbook to include the tasks into this playbook.
# After the first task - "Install dependencies" and before the current second task
# "Install Python Flask dependencies" add include statement to include the file "tasks/deploy_db.yml"

- name: Deploy a web application
  hosts: db_and_web_server
  tasks:
    - name: Install dependencies
      apt: name={{ item }} state=installed
      with_items:
        - python
        - python-setuptools
        - python-dev
        - build-essential
        - python-pip
        - python-mysqldb

    - include: ./tasks/deploy_db.yml

    - name: Install Python Flask dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql
    - name: Install Python Flask dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - flask
        - flask-mysql

    - name: Copy web-server code
      copy: src=app.py dest=/opt/app.py

    - name: Start web-application
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &
# Exercice 5
# Do the same for all the tasks under web application deployment.
# A new file is created under tasks folder named - deploy_web.yml.
# Move the below tasks to the new file and add include statement in the main playbook to include the file "tasks/deploy_web.yml"

- name: Deploy a web application
  hosts: db_and_web_server
  tasks:
    - name: Install dependencies
      apt: name={{ item }} state=installed
      with_items:
        - python
        - python-setuptools
        - python-dev
        - build-essential
        - python-pip
        - python-mysqldb

    - include: tasks/deploy_db.yml

    - include: tasks/deploy_web.yml
